loader.preload = "file:{{ gramine.libos }}"  # for compatibility with v1.0

loader.entrypoint = "file:{{ gramine.libos }}"
libos.entrypoint = "benchmark_app"

loader.log_level = "{{ log_level }}"

loader.env.LD_LIBRARY_PATH = "/lib:{{ openvino_dir }}/deployment_tools/inference_engine/external/tbb/lib:{{ openvino_dir }}/deployment_tools/inference_engine/lib/intel64:{{ openvino_dir }}/opencv/lib:{{ openvino_dir }}/deployment_tools/ngraph/lib:{{ arch_libdir }}:/usr/{{ arch_libdir }}"

fs.mount.lib.type = "chroot"
fs.mount.lib.path = "/lib"
fs.mount.lib.uri = "file:{{ gramine.runtimedir() }}"

fs.mount.lib2.type = "chroot"
fs.mount.lib2.path = "{{ arch_libdir }}"
fs.mount.lib2.uri = "file:{{ arch_libdir }}"

fs.mount.lib3.type = "chroot"
fs.mount.lib3.path = "/usr/{{ arch_libdir }}"
fs.mount.lib3.uri = "file:/usr/{{ arch_libdir }}"

fs.mount.etc.type = "chroot"
fs.mount.etc.path = "/etc"
fs.mount.etc.uri = "file:/etc"

fs.mount.openvino.type = "chroot"
fs.mount.openvino.path = "{{ openvino_dir }}"
fs.mount.openvino.uri = "file:{{ openvino_dir }}"

fs.mount.samples.type = "chroot"
fs.mount.samples.path = "{{ inference_engine_cpp_samples_build }}"
fs.mount.samples.uri = "file:{{ inference_engine_cpp_samples_build }}"

loader.insecure__use_cmdline_argv = true

sgx.enclave_size = "32G"
sgx.thread_num = 196

sgx.preheat_enclave = true
libos.check_invalid_pointers = false

sgx.trusted_files = [
  "file:benchmark_app",
  "file:{{ gramine.runtimedir() }}/",
  "file:{{ arch_libdir }}/",
  "file:/usr/{{ arch_libdir }}/",
  "file:{{ openvino_dir }}/deployment_tools/inference_engine/lib/intel64/",
  "file:{{ openvino_dir }}/deployment_tools/inference_engine/external/tbb/lib/",
  "file:{{ openvino_dir }}/opencv/lib/",
  "file:{{ openvino_dir }}/deployment_tools/ngraph/lib/",
  "file:{{ inference_engine_cpp_samples_build }}/intel64/Release/lib/",
  "file:model/",
]

sgx.allowed_files = [
  "file:/etc/ethers",
  "file:/etc/group",
  "file:/etc/hosts",
  "file:/etc/nsswitch.conf",
  "file:/etc/passwd",
  "file:output.txt",
]
