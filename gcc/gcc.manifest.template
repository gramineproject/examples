# SPDX-License-Identifier: LGPL-3.0-or-later

# This is a general manifest template for running GCC and its utility programs,
# including as, cc1, collect2, ld.

loader.entrypoint = "file:{{ gramine.libos }}"
libos.entrypoint = "/usr/bin/gcc"

loader.log_level = "{{ log_level }}"

loader.env.LD_LIBRARY_PATH = "/lib:{{ arch_libdir }}:/usr/lib:/usr/{{ arch_libdir }}"
loader.env.PATH = "/bin:/usr/bin"

loader.insecure__use_cmdline_argv = true

fs.mounts = [
  { uri = "file:{{ gramine.runtimedir() }}", path = "/lib" },
  { uri = "file:{{ arch_libdir }}", path = "{{ arch_libdir }}" },
  { uri = "file:/usr", path = "/usr" },
  { uri = "file:/lib64", path = "/lib64" },

  # cannot replace /tmp with "tmpfs" mount because Gramine currently doesn't support multi-process
  # "tmpfs" files (e.g., "tmpfs" files created in a child process are not visible in the parent)
  { uri = "file:/tmp", path = "/tmp" },
]

loader.pal_internal_mem_size = "64M"

sgx.enclave_size = "1G"
sgx.edmm_enable = {{ 'true' if env.get('EDMM', '0') == '1' else 'false' }}

sgx.trusted_files = [
  "file:{{ gramine.libos }}",
  "file:/usr/bin/gcc",
  "file:/usr/bin/as",
  "file:/usr/bin/ld",
  "file:{{ gramine.runtimedir() }}/",
  "file:{{ arch_libdir }}/",
  "file:/usr/{{ arch_libdir }}/",
  "file:{{ gcc_lib_path }}/{{ gcc_major_version }}/",
  "file:/lib64/",
  "file:/usr/include/",
]

sgx.allowed_files = [
  "file:/tmp",
  "file:test_files",
]
